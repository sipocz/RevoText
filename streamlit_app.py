import streamlit as st

import json
from openai import OpenAI


st.set_page_config(layout="wide",
                   page_title="RevoText", 
                   page_icon="üì¶",
                   menu_items={
        
        "Report a bug": "https://github.com/sipocz/RevoText/issues",
        "About": '''
        ## üì¶ RevoText ‚Äì Forradalmas√≠tjuk az ingatlanhirdet√©seket

A **RevoText** egy mesters√©ges intelligenci√°val m≈±k√∂d≈ë **sz√∂vegasszisztens**, amely seg√≠t a hirdet≈ëknek profi, √©rthet≈ë √©s vonz√≥ ingatlanle√≠r√°sokat k√©sz√≠teni ‚Äì egyszer≈±en √©s gyorsan.

Legyen sz√≥ garzonlak√°sr√≥l vagy csal√°di h√°zr√≥l, a RevoText a v√°zlatos sz√∂vegeket meggy≈ëz≈ë hirdet√©sekk√© alak√≠tja, kiemelve az ingatlan val√≥di √©rt√©keit.

‚úçÔ∏è *Te csak √≠rd le, amit szeretn√©l ‚Äì a RevoText gondoskodik a t√∂k√©letes megfogalmaz√°sr√≥l.*

---

### Mit ny√∫jt a RevoText?

- ‚úÖ Automatikus sz√∂vegjav√≠t√°s, stilisztikai √©s nyelvtani finom√≠t√°s  
- ‚úÖ V√°laszthat√≥ hangnem: bar√°ts√°gos, professzion√°lis, exkluz√≠v... 
- ‚úÖ Kiemel√©sek, √©rthet≈ë szerkezet, jobb olvashat√≥s√°g  
- ‚úÖ SEO-bar√°t sz√∂vegek a jobb online megjelen√©s√©rt
'''})




def create_prompt(szoveg,commands="None")->str:

    content="""
                            √ârt√©keld az al√°bbi ingatlanhirdet√©s sz√∂veget √©s az √©rt√©kel√©st a scoring mez≈ëbe helyezzed el.
                            Az al√°bbi szempontok alapj√°n 1‚Äì5-ig pontozzad, √©s hozz l√©tre egy √∂sszes√≠tett eredm√©nyt  1-8 k√∂z√∂tti szempontok √©rt√©kel√©s√©nek √°tlagak√©nt ez legyen a 9. √ñsszes√≠t√©s :
                            Majd a tud√°sod alapj√°n adj egy alternat√≠v javaslatot az eredeti sz√∂veg jav√≠t√°s√°ra, hogy a lehet≈ë legjobban megfeleljen a szempontoknak.
                            Az alternat√≠v javaslatot struktur√°ld, √©s t√∂rdeld a jobb √©rthet≈ës√©g √©rdek√©ben, de markdown form√°tumot ne haszn√°lj!
                            Fontos, hogy a saj√°t szempontrendszered szerint az alternat√≠v javaslatod √©rt√©kel√©se jobb legyen az eredeti √©rt√©kel√©sn√©l!\n
                            - A c√≠mek gener√°l√°s√°n√°l vedd figyelembe a k√∂vetkez≈ëket:\n"
            """ +f'{commands}\n' + """    
                            A v√°laszod csak √©rv√©nyes JSON form√°tumban legyen, pontosan az al√°bbi strukt√∫r√°ban:

                            {"scoring":
                                {

                                    "√ârthet≈ës√©g": <sz√°m>,
                                    "R√©szletess√©g": <sz√°m>,
                                    "Szerkezet": <sz√°m>,
                                    "C√©lcsoport": <sz√°m>,
                                    "St√≠lus": <sz√°m>,
                                    "El≈ëny√∂k": <sz√°m>,
                                    "Negat√≠vumok": <sz√°m>,
                                    "√ñszt√∂nz√©s": <sz√°m>,
                                    "√ñsszes√≠t√©s": <sz√°m.tizedes>"
                                },
                            "proposal":"Ide ker√ºlj√∂n a jav√≠tott sz√∂veg javaslatod"
                            }


                    A HIRDET√âS SZ√ñVEGE:
                        """+f" {szoveg}"
    prompt_message=[
            {"role": "system",
             "content": f'''
                    Te egy ingatlanhirdet√©s-elemz≈ë nyelv√©sz vagy, komoly ingatlanhirdet√©si tapasztalattal.
                    C√©lod, hogy az ingatlan hirdet√©sek t√∂k√©letesek legyenek ez√©rt kidolgozt√°l egy hirdet√©s √©rt√©kel√©si szempontrendszert.
                    Ezek a szempontok alapj√°n t√∂k√©letes √©rt√©kel√©st tudsz adni az adott hirdet√©s sz√∂vege alapj√°n.
                    A szempontok:
                        1. √ârthet≈ës√©g
                        2. R√©szletess√©g / inform√°ci√≥tartalom
                        3. Szerkezet, logikai fel√©p√≠t√©s
                        4. C√©lcsoport megsz√≥l√≠t√°sa
                        5. St√≠lus √©s nyelvhelyess√©g
                        6. El≈ëny√∂k kiemel√©se
                        7. Negat√≠vumok ≈ëszinte kezel√©se
                        8. Elad√°sra √∂szt√∂nz√©s'''},
            {"role": "user",
             "content": content}
        ]
    return prompt_message

def create_title_prompt(szoveg: str,commands:str)->str:
    return [
        {
            "role": "system",
            "content": (
            "Te egy t√∂m√∂r sz√∂veg√≠r√≥ vagy. KIZ√ÅR√ìLAG a megadott hirdet√©ssz√∂veg alapj√°n "
            "k√©sz√≠ts pontosan √∂t √ºt≈ës c√≠maj√°nlatot.\n\n"
            "Korl√°tok:\n"
            "- A kimenet K√ñTELEZ≈êEN √©rv√©nyes JSON objektum legyen pontosan ebben a form√°ban: {\"titles\": [\"...\", \"...\", \"...\", \"...\", \"...\"]}\n"
            "- Ne haszn√°lj markdown-t, k√≥d fence-et, extra kulcsokat, magyar√°zatot.\n"
            "- Minden c√≠m legfeljebb 60 karakter legyen, magyar nyelven, emojik √©s id√©z≈ëjelek n√©lk√ºl.\n"
            "- Ne tal√°lj ki a hirdet√©sben nem szerepl≈ë t√©nyeket.\n"
            "- Legyenek egym√°st√≥l k√ºl√∂nb√∂z≈ëek (m√°s n√©z≈ëpont/sz√∂vegez√©s), j√≥l olvashat√≥k √©s kattint√°sra √∂szt√∂nz≈ëk.\n"
            "- A c√≠mek gener√°l√°s√°n√°l vedd figyelembe a k√∂vetkez≈ëket:\n"
            f"-{commands}\n"    
            ),
        },
        {
            "role": "user",
            "content": f"INGATLAN HIRDET√âS SZ√ñVEGE:\n{szoveg}"
        }
    ]



def create_command(mood:str,lang:str,mode:str)->str: 
    s=f"Haszn√°land√≥ ST√çLUS:{mood}\n"
    
    m=f"Haszn√°land√≥ M√ìD:{mode}\n"
    if st.session_state.mode=="üìÑ Sz√∂veges":
        m=m+"Csak r√©szletes sz√∂veges le√≠r√°st haszn√°lj, ne legyen benne felsorol√°s, ne legyen lista √©s ne legyen tagol√°s sem!\n"
    else:
        m=m+"Haszn√°lj sz√∂veg tagol√°st √©s felsorol√°sokat, list√°kat a sz√∂vegben! De ne legyen markdown form√°tum benne, csak k√∂t≈ëjellel  √©s soremel√©ssel tagolj!\n"
       
    l=f"A hirdet√©s sz√∂veg nyelv√©hez ezt a nyelvet haszn√°ljad :{lang} !\n"
    
    return(s+m+l)

def create_title_command(mood:str,  lang:str,mode="")->str:
    s=f"Haszn√°land√≥ ST√çLUS: {mood}\n"
    l=f"A c√≠m sz√∂veg nyelv√©hez ezt a nyelvet haszn√°ljad: {lang}!\n"
    
    return(s+l)





def get_response(szoveg:str,func,command)->dict:
    '''
    A megadott sz√∂veghez promptot k√©sz√≠t (`create_prompt`), elk√ºldi az OpenAI Chat
    Completions API-nak (gpt-4o), majd a v√°laszt JSON-k√©nt beolvassa √©s dict-k√©nt visszaadja.

    Param√©terek
    -----------
    szoveg : str
        A bemeneti sz√∂veg, amelyb≈ël a `create_prompt` √∂ssze√°ll√≠tja a `messages` list√°t.

    Visszat√©r√©s
    -----------
    dict
        A modell √°ltal visszaadott JSON objektum, Python dict-be parse-olva.
    '''
    client = OpenAI(api_key=key)
    
    prompt_message=func(szoveg,command)
    response = client.chat.completions.create(
        model="gpt-4o",
        messages=prompt_message,
        temperature=0.5,
        max_tokens=7000,
        response_format={ "type": "json_object" }   
    )

    content = response.choices[0].message.content
    out_dict = json.loads(content)

    return(out_dict)


def create_ai_proposal():
    
    user_text=st.session_state.text1
    # Eredm√©nyeket elt√°roljuk session_state-ben
    command=create_command(mood=st.session_state.mood,mode=st.session_state.mode,lang=st.session_state.lang)
    ai_result=get_response(user_text,create_prompt,command)
    
    print(ai_result) # server oldali kiirat√°s 
    #st.write(ai_result) #Debug
    st.session_state.ratings=ai_result["scoring"]
    st.session_state.ai_proposal=ai_result["proposal"]  # ezt k√©s≈ëbb m√©g haszn√°lni fogjuk
    st.session_state.text2 = st.session_state.ai_proposal 


def create_title():
    
    gen_text=st.session_state.ai_proposal 
    # Eredm√©nyeket elt√°roljuk session_state-ben
    command=create_title_command(mood=st.session_state.mood,mode=st.session_state.mode,lang=st.session_state.lang)
    print(command)
    ai_result=get_response(gen_text,create_title_prompt,command)
    
    print(ai_result) # server oldali kiirat√°s 
    #st.write(ai_result) #Debug
    st.session_state.text2=ai_result["titles"][0]+"\n\n"+st.session_state.ai_proposal
    st.session_state.title_list=ai_result["titles"]

def update_title():
    print(st.session_state.selected_title)
    st.session_state.text2=st.session_state.title_list[st.session_state.selected_title]+"\n\n"+st.session_state.ai_proposal
   




def use_test():
    st.session_state.text1='''Gy≈ërt√∂l 14 kilometerre 3 sz√≥b√°s, lakhat√≥ csaldi h√°z elad√≥.

Jellemez≈ëi:

- 856 m2-es telke
- a fel√≠tm√©ny t√©gl√°b√≥l √©p√ºlt, k≈ë alapos
- 78 m2-es lak√≥t√©r
- a tet≈ë h√©jzata cser√≠p
- csatorna, viz √©s villan k√∂zm≈±vel ell√°tott a h√°z
- k√°zcsonk telkhat√°ron
- melleg vizell√°t√°s: elektronyos bolyler

- f≈±t√©se: cser√©pkajha
- 2007-ben fel√∫j√≠t√°s keretein bel√ºl cser√©lt√©k a ny√≠l√°ss√°r√≥kat, tett≈ët (l√≠cez√©s, f√≥lia, h√©jazat), elektronyos- √©s v√≠zh√°l√≥zatot, burkolattokatt
- 15 m2-es kar√°zs + t√°rolasra alkalmas mell√©kes √≠p√ºletek
- √°sot kut
- tellyes kifizt√©st k√∂vet≈ëen r√∂vides id≈ën bel√ºl birtokba vehet≈ë

T√∂bb l√°tnyival√≥ √©s nevezetess√≠g tal√°lhat√≥ a k√∂ss√©gbe, tov√°bb√° a k√∂rny√©k√©n is, mint pl. a Pannonhalmi F≈ëp√°ts√°g, a pincesorr stb.
Amenyiben felkelttette √©rdekl≈ëd√©st, keressen hizalommal. '''


def csillagok(d:dict)->str:
    for _, ertek in d.items():
        
        csillagok = "‚≠êÔ∏è" * int(float(ertek)) + "‚òÜ" * (5 - int(ertek))
        st.markdown(f"{csillagok}", unsafe_allow_html=True)

def pontszamok(d:dict)->str:
    for _ , ertek in d.items():
        
        ertekek = f'{ertek}'
        st.markdown(f"**{ertekek}**", unsafe_allow_html=True)

def szempontok(d:dict)->str:
    for szempont, _ in d.items():
        
        st.markdown(f"**{szempont}**", unsafe_allow_html=True)









key = st.secrets["API_KEYS"]["OpenAI"]

# vizu√°lis elemek

# ameddig nincs m√©g √©rt√©kel√©s minden alaphelyzeten lesz
if 'ratings' not in st.session_state:
    st.session_state.ratings = {
        "√ârthet≈ës√©g": 0,
        "R√©szletess√©g": 0,
        "Szerkezet": 0,
        "C√©lcsoport": 0,
        "St√≠lus": 0,
        "El≈ëny√∂k": 0,
        "Negat√≠vumok": 0,
        "√ñszt√∂nz√©s": 0,
        "√ñsszes√≠t√©s": 0
            }  

if "text2" not in st.session_state:
    st.session_state.text2=""


if 'mood' not in st.session_state:                  #Global v√°ltoz√≥ legyen
    st.session_state.mood="üíº Professzion√°lis"

if 'mode' not in st.session_state:                  #Global v√°ltoz√≥ legyen
    st.session_state.mode="Sz√∂veges"

if 'lang' not in st.session_state:                  #Global v√°ltoz√≥ legyen
    st.session_state.lang="Magyar"

if "proposed_text" not in st.session_state:
    st.session_state.proposed_text=""

#st.markdown("---")  # v√≠zszintes vonal

head0,head1=st.columns([70,30])
with head0:
    with st.expander("üì¶ RevoText v0.6 - C√≠mek aj√°nl√°sa"):
        st.info('''## üì¶ RevoText ‚Äì Forradalmas√≠tjuk az ingatlanhirdet√©seket

A **RevoText** egy mesters√©ges intelligenci√°val m≈±k√∂d≈ë **sz√∂vegasszisztens**, amely seg√≠t a hirdet≈ëknek profi, √©rthet≈ë √©s vonz√≥ ingatlanle√≠r√°sokat k√©sz√≠teni ‚Äì egyszer≈±en √©s gyorsan.

Legyen sz√≥ garzonlak√°sr√≥l vagy csal√°di h√°zr√≥l, a RevoText a v√°zlatos sz√∂vegeket meggy≈ëz≈ë hirdet√©sekk√© alak√≠tja, kiemelve az ingatlan val√≥di √©rt√©keit.

‚úçÔ∏è *Te csak √≠rd le, amit szeretn√©l ‚Äì a RevoText gondoskodik a t√∂k√©letes megfogalmaz√°sr√≥l.*

---

### Mit ny√∫jt a RevoText?

- ‚úÖ Automatikus sz√∂vegjav√≠t√°s, stilisztikai √©s nyelvtani finom√≠t√°s  
- ‚úÖ V√°laszthat√≥ hangnem: bar√°ts√°gos, professzion√°lis, exkluz√≠v... 
- ‚úÖ Kiemel√©sek, √©rthet≈ë szerkezet, jobb olvashat√≥s√°g  
- ‚úÖ SEO-bar√°t sz√∂vegek a jobb online megjelen√©s√©rt
''')

with head1:
    with st.expander("üìá Kapcsolat"):
        st.info("""
            ### üìá Kapcsolat

            **üë§ N√©v:** Sip≈ëcz L√°szl√≥  
            **‚úâÔ∏è E-mail:** [sipoczlaszlo@gmail.com](mailto:sipoczlaszlo@gmail.com)  
            **üìû Telefon:** +36 20 47 46 47 3  
            **üîó LinkedIn:** [linkedin.com/in/36204746473/](https://www.linkedin.com/in/36204746473/)
            """)




st.markdown("<div style='height: 3px;'></div>", unsafe_allow_html=True)  # f√ºgg≈ëleges t√©rk√∂z
c1,c2,c3,c4,c5 = st.columns([10,20,20,20,10])




with c1:
    pass
    
    #st.markdown("<h3 style='text-align: left;'>RevoText</h3>", unsafe_allow_html=True


with c5:
    pass
with c2:
    st.session_state.mood = st.selectbox("üé≠ A hirdet√©s hangulata :", ["üíº Professzion√°lis", "üòä Bar√°ts√°gos", "üé© Exkluz√≠v", "ü§ñ Tech", "üé® Kreat√≠v"],key="mood_", help="A gener√°lt hirdet√©si sz√∂veg hangulat√°t ezzel a mez≈ëvel lehet befoly√°solni!")
    # st.write(f"A v√°lasztott hangulat: {st.session_state.mood }")
with c3:
    st.session_state.mode = st.selectbox("üß† A hirdet√©s megjelen√©si m√≥dja:", ["üìÑ Sz√∂veges", "‚úÖ Tagolt"],key="mode_",  help="A hirdet√©s **megjelen√©s√©nek** m√≥dja v√°laszthat√≥")
    # st.write(f"A v√°lasztott m√≥d: {st.session_state.mode}")
with c4:
    st.session_state.lang = st.selectbox("üåç A hirdet√©s nyelve:",["Magyar", "Angol", "N√©met"],key="lang_", help="A hirdet√©s **nyelve** v√°laszthat√≥")
    # st.write(f"A v√°lasztott nyelv: {st.session_state.lang}")


   


col1,col2 ,col3 = st.columns([2,2,3])
with col1:
    st.text_area("Eredeti hirdet√©s sz√∂vege", key="text1", height=600)

with col3:
    st.select_slider("C√≠m",options=[0,1,2,3,4],on_change=update_title,key="selected_title")
    st.text_area("AI javaslat", key="text2", height=600)
    
# Egyszer≈± feldolgoz√°s gombnyom√°sra
with col2:
    st.markdown("---")  # v√≠zszintes vonal
    st.button("‚éØ‚éØ‚éØ  K√©rem a javaslatot! ‚û§‚û§‚û§ ", on_click=create_ai_proposal,use_container_width=True)
    
    st.button("‚éØ‚éØ‚éØ  K√©rek egy j√≥ c√≠met ‚û§‚û§‚û§ ", on_click=create_title,use_container_width=True,disabled=len(st.session_state.text2)==0)
    
    st.button("‚óÄ‚óÄ‚óÄ Teszt sz√∂veg üòÜ ‚éØ‚éØ‚éØ ", on_click=use_test,use_container_width=True)

    #st.markdown("---")  # v√≠zszintes vonal    
    st.markdown(f"<p style='text-align:center;'>Az eredeti sz√∂veg √©rt√©kel√©se</p>", unsafe_allow_html=True)
   
    o1,o2,o3=st.columns([3,1,6])
    with o1:
        szempontok(st.session_state.ratings)
    with o2:
        pontszamok(st.session_state.ratings)   
    with o3:
        csillagok(st.session_state.ratings)
    
    st.markdown("---")  # v√≠zszintes vonal

st.markdown("---")  # v√≠zszintes vonal
st.markdown("<div style='height: 30px;'></div>", unsafe_allow_html=True)  # f√ºgg≈ëleges t√©rk√∂z

column1,column2=st.columns(2)


