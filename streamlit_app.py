import streamlit as st

import json
from openai import OpenAI


def create_prompt(commands,txt):
    prompt_message=[
            {"role": "system",
             "content": f'''
                    Te egy ingatlanhirdet√©s-elemz≈ë nyelv√©sz vagy, komoly ingatlanhirdet√©si tapasztalattal.
                    C√©lod, hogy az ingatlan hirdet√©sek t√∂k√©letesek legyenek ez√©rt kidolgozt√°l egy hirdet√©s √©rt√©kel√©si szempontrendszert.
                    Ezek a szempontok alapj√°n t√∂k√©letes √©rt√©kel√©st tudsz adni az adott hirdet√©s sz√∂vege alapj√°n.
                    A szempontok:
                        1. √ârthet≈ës√©g
                        2. R√©szletess√©g / inform√°ci√≥tartalom
                        3. Szerkezet, logikai fel√©p√≠t√©s
                        4. C√©lcsoport megsz√≥l√≠t√°sa
                        5. St√≠lus √©s nyelvhelyess√©g
                        6. El≈ëny√∂k kiemel√©se
                        7. Negat√≠vumok ≈ëszinte kezel√©se
                        8. Elad√°sra √∂szt√∂nz√©s'''},
            {"role": "user",
             "content": """
                            √ârt√©keld az al√°bbi ingatlanhirdet√©s sz√∂veget √©s az √©rt√©kel√©st a scoring mez≈ëbe helyezzed el.
                            Az al√°bbi szempontok alapj√°n 1‚Äì5-ig pontozzad, √©s hozz l√©tre egy √∂sszes√≠tett eredm√©nyt  1-8 k√∂z√∂tti szempontok √©rt√©kel√©s√©nek √°tlagak√©nt ez legyen a 9. √ñsszes√≠t√©s :
                            Majd a tud√°sod alapj√°n adj egy alternat√≠v javaslatot az eredeti sz√∂veg jav√≠t√°s√°ra, hogy a lehet≈ë legjobban megfeleljen a szempontoknak.  
                            Az alternat√≠v javaslat gener√°l√°sa sor√°n haszn√°ljad ST√çLUS: √©s a M√ìD: cimk√©kkel megjel√∂lt el≈ë√≠r√°sokat, de markdown form√°tumot ne haszn√°lj!
                            Fontos, hogy a saj√°t szempontrendszered szerint az alternat√≠v javaslatod √©rt√©kel√©se jobb legyen az eredeti √©rt√©kel√©sn√©l!  
                            A v√°laszod csak √©rv√©nyes JSON form√°tumban legyen, pontosan az al√°bbi strukt√∫r√°ban:

                            {"scoring":
                                {

                                    "√ârthet≈ës√©g": <sz√°m>,
                                    "R√©szletess√©g": <sz√°m>,
                                    "Szerkezet": <sz√°m>,
                                    "C√©lcsoport": <sz√°m>,
                                    "St√≠lus": <sz√°m>,
                                    "El≈ëny√∂k": <sz√°m>,
                                    "Negat√≠vumok": <sz√°m>,
                                    "√ñszt√∂nz√©s": <sz√°m>,
                                    "√ñsszes√≠t√©s": <sz√°m.tizedes>"
                                },
                            "proposal":"Ide ker√ºlj√∂n a jav√≠tott sz√∂veg javaslatod"    
                        
                        El≈ë√≠r√°sok:
                        """+f"{commands}"+f"Eredeti hirdet√©s: {txt}"}
        ]
    print(prompt_message) #Debug
    return prompt_message

def create_command(): # streamlit glob√°lis v√°ltoz√≥kb√≥l dolgozik
    s=f"ST√çLUS:{st.session_state.mood}\n"
    m=f"M√ìD:{st.session_state.mode}\n"
    return(s+m)



def get_response(command:str, szoveg:str):
    client = OpenAI(api_key=key)
    prompt_message=create_prompt(command, szoveg)
    response = client.chat.completions.create(
        model="gpt-4o",
        messages=prompt_message,
        temperature=0.7,
        max_tokens=3900
    )
   
    content = response.choices[0].message.content

    # a gpt-4 √≠gy adja vissza a json v√°laszt, kiszedj√ºk a jsont a felesleges keretb≈ël
    if content.startswith("```json"):
        content = content.strip("`").lstrip("json").strip()

    # 
    out_dict = json.loads(content)

    return(out_dict)

def feldolgozas():
    
    user_text=st.session_state.text1
    # Eredm√©nyeket elt√°roljuk session_state-ben
    command=create_command()
    ai_result=get_response(command,user_text)
    


    print(ai_result) # server oldali kiirat√°s 
    #st.write(ai_result) #Debug
    st.session_state.ratings=ai_result["scoring"]
    st.session_state.text2 = ai_result["proposal"]

def csillagok(d:dict)->str:
    for _, ertek in d.items():
        
        csillagok = "‚≠êÔ∏è" * int(ertek) + "‚òÜ" * (5 - int(ertek))
        st.markdown(f"{csillagok}", unsafe_allow_html=True)

def pontszamok(d:dict)->str:
    for _ , ertek in d.items():
        
        ertekek = f'{ertek}'
        st.markdown(f"**{ertekek}**", unsafe_allow_html=True)

def szempontok(d:dict)->str:
    for szempont, _ in d.items():
        
        st.markdown(f"**{szempont}**", unsafe_allow_html=True)



st.set_page_config(layout="wide")
key = st.secrets["API_KEYS"]["OpenAI"]
  



# vizu√°lis elemek

# ameddig nincs m√©g √©rt√©kel√©s minden alaphelyzeten lesz
if 'ratings' not in st.session_state:
    st.session_state.ratings = {
        "√ârthet≈ës√©g": 0,
        "R√©szletess√©g": 0,
        "Szerkezet": 0,
        "C√©lcsoport": 0,
        "St√≠lus": 0,
        "El≈ëny√∂k": 0,
        "Negat√≠vumok": 0,
        "√ñszt√∂nz√©s": 0,
        "√ñsszes√≠t√©s": 0
            }  


if 'mood' not in st.session_state:                  #Global v√°ltoz√≥ legyen
    st.session_state.mood="üíº Professzion√°lis"

if 'mode' not in st.session_state:                  #Global v√°ltoz√≥ legyen
    st.session_state.mode="Sz√∂veges"








#st.markdown("---")  # v√≠zszintes vonal
st.markdown("<div style='height: 3px;'></div>", unsafe_allow_html=True)  # f√ºgg≈ëleges t√©rk√∂z
c1,c2,c3,c4,c5 = st.columns([40,20,20,20,20])

with c1:
    with st.expander("üì¶ RevoText v0.5"):
        st.markdown('''## üì¶ RevoText ‚Äì Forradalmas√≠tjuk az ingatlanhirdet√©seket

A **RevoText** egy mesters√©ges intelligenci√°val m≈±k√∂d≈ë **sz√∂vegasszisztens**, amely seg√≠t a hirdet≈ëknek profi, √©rthet≈ë √©s vonz√≥ ingatlanle√≠r√°sokat k√©sz√≠teni ‚Äì egyszer≈±en √©s gyorsan.

Legyen sz√≥ garzonlak√°sr√≥l vagy csal√°di h√°zr√≥l, a RevoText a v√°zlatos sz√∂vegeket meggy≈ëz≈ë hirdet√©sekk√© alak√≠tja, kiemelve az ingatlan val√≥di √©rt√©keit.

‚úçÔ∏è *Te csak √≠rd le, amit szeretn√©l ‚Äì a RevoText gondoskodik a t√∂k√©letes megfogalmaz√°sr√≥l.*

---

### Mit ny√∫jt a RevoText?

- ‚úÖ Automatikus sz√∂vegjav√≠t√°s, stilisztikai √©s nyelvtani finom√≠t√°s  
- ‚úÖ V√°laszthat√≥ hangnem: bar√°ts√°gos, professzion√°lis, exkluz√≠v... 
- ‚úÖ Kiemel√©sek, √©rthet≈ë szerkezet, jobb olvashat√≥s√°g  
- ‚úÖ SEO-bar√°t sz√∂vegek a jobb online megjelen√©s√©rt
''')
    
    #st.markdown("<h3 style='text-align: left;'>RevoText</h3>", unsafe_allow_html=True


with c5:
    with st.expander("üìá Kapcsolat"):
        st.markdown("""
            ### üìá Kapcsolat

            **üë§ N√©v:** Sip≈ëcz L√°szl√≥  
            **‚úâÔ∏è E-mail:** [sipoczlaszlo@gmail.com](mailto:sipoczlaszlo@gmail.com)  
            **üìû Telefon:** +36 20 47 46 47 3  
            **üîó LinkedIn:** [linkedin.com/in/36204746473/](https://www.linkedin.com/in/36204746473/)
            """)

with c2:
    st.session_state.mood = st.selectbox("üí° V√°lassz hangulatot:", ["üíº Professzion√°lis", "üòä Bar√°ts√°gos", "üé© Exkluz√≠v", "ü§ñ Tech", "üé® Kreat√≠v"],key="mood_")
    st.write(f"A v√°lasztott hangulat: {st.session_state.mood }")
with c3:
    st.session_state.mode = st.selectbox("üí° V√°lassz m√≥dot:", ["üìÑ Sz√∂veges", "‚úÖ Tagolt"],key="mode_")
    st.write(f"A v√°lasztott m√≥d: {st.session_state.mode}")


   


col1,col2 ,col3 = st.columns(3)
with col1:
    st.text_area("Eredeti hirdet√©s sz√∂vege", key="text1", height=600)
    

with col3:
    st.text_area("AI javaslat", key="text2", height=600)
    
# Egyszer≈± feldolgoz√°s gombnyom√°sra
with col2:
    st.markdown("---")  # v√≠zszintes vonal
    st.button("‚éØ‚éØ‚éØ  K√©rem a javaslatot! ‚û§‚û§‚û§ ", on_click=feldolgozas,use_container_width=True)

    st.markdown("---")  # v√≠zszintes vonal    
    st.markdown(f"<p style='text-align:center;'>Az eredeti sz√∂veg √©rt√©kel√©se</p>", unsafe_allow_html=True)
   
    o1,o2,o3=st.columns([3,1,6])
    with o1:
        szempontok(st.session_state.ratings)
    with o2:
        pontszamok(st.session_state.ratings)   
    with o3:
        csillagok(st.session_state.ratings)
    
    st.markdown("---")  # v√≠zszintes vonal

st.markdown("---")  # v√≠zszintes vonal
st.markdown("<div style='height: 30px;'></div>", unsafe_allow_html=True)  # f√ºgg≈ëleges t√©rk√∂z

column1,column2=st.columns(2)
